// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file flow/access/access.proto (package flow.access, syntax proto3)

import type {
  GenFile,
  GenMessage,
  GenService,
} from "@bufbuild/protobuf/codegenv1"
import {
  fileDesc,
  messageDesc,
  serviceDesc,
} from "@bufbuild/protobuf/codegenv1"
import type { Account, AccountKey } from "../entities/account_pb"
import { file_flow_entities_account } from "../entities/account_pb"
import type { BlockHeader } from "../entities/block_header_pb"
import { file_flow_entities_block_header } from "../entities/block_header_pb"
import type { Block, BlockStatus } from "../entities/block_pb"
import { file_flow_entities_block } from "../entities/block_pb"
import type { Collection } from "../entities/collection_pb"
import { file_flow_entities_collection } from "../entities/collection_pb"
import type { Event, EventEncodingVersion } from "../entities/event_pb"
import { file_flow_entities_event } from "../entities/event_pb"
import type { ExecutionResult } from "../entities/execution_result_pb"
import { file_flow_entities_execution_result } from "../entities/execution_result_pb"
import type { Metadata } from "../entities/metadata_pb"
import { file_flow_entities_metadata } from "../entities/metadata_pb"
import type { NodeVersionInfo } from "../entities/node_version_info_pb"
import { file_flow_entities_node_version_info } from "../entities/node_version_info_pb"
import type { Transaction, TransactionStatus } from "../entities/transaction_pb"
import { file_flow_entities_transaction } from "../entities/transaction_pb"
import type { Timestamp } from "@bufbuild/protobuf/wkt"
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt"
import type { Message } from "@bufbuild/protobuf"

/**
 * Describes the file flow/access/access.proto.
 */
export const file_flow_access_access: GenFile =
  /*@__PURE__*/
  fileDesc(
    "",
    [
      file_flow_entities_account,
      file_flow_entities_block_header,
      file_flow_entities_block,
      file_flow_entities_collection,
      file_flow_entities_event,
      file_flow_entities_execution_result,
      file_flow_entities_metadata,
      file_flow_entities_node_version_info,
      file_flow_entities_transaction,
      file_google_protobuf_timestamp,
    ],
  )

/**
 * @generated from message flow.access.PingRequest
 */
export type PingRequest = Message<"flow.access.PingRequest"> & {}

/**
 * Describes the message flow.access.PingRequest.
 * Use `create(PingRequestSchema)` to create a new message.
 */
export const PingRequestSchema: GenMessage<PingRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 0)

/**
 * @generated from message flow.access.PingResponse
 */
export type PingResponse = Message<"flow.access.PingResponse"> & {}

/**
 * Describes the message flow.access.PingResponse.
 * Use `create(PingResponseSchema)` to create a new message.
 */
export const PingResponseSchema: GenMessage<PingResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 1)

/**
 * @generated from message flow.access.GetNodeVersionInfoRequest
 */
export type GetNodeVersionInfoRequest =
  Message<"flow.access.GetNodeVersionInfoRequest"> & {}

/**
 * Describes the message flow.access.GetNodeVersionInfoRequest.
 * Use `create(GetNodeVersionInfoRequestSchema)` to create a new message.
 */
export const GetNodeVersionInfoRequestSchema: GenMessage<GetNodeVersionInfoRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 2)

/**
 * @generated from message flow.access.GetNodeVersionInfoResponse
 */
export type GetNodeVersionInfoResponse =
  Message<"flow.access.GetNodeVersionInfoResponse"> & {
    /**
     * @generated from field: flow.entities.NodeVersionInfo info = 1;
     */
    info?: NodeVersionInfo
  }

/**
 * Describes the message flow.access.GetNodeVersionInfoResponse.
 * Use `create(GetNodeVersionInfoResponseSchema)` to create a new message.
 */
export const GetNodeVersionInfoResponseSchema: GenMessage<GetNodeVersionInfoResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 3)

/**
 * @generated from message flow.access.GetLatestBlockHeaderRequest
 */
export type GetLatestBlockHeaderRequest =
  Message<"flow.access.GetLatestBlockHeaderRequest"> & {
    /**
     * @generated from field: bool is_sealed = 1;
     */
    isSealed: boolean
  }

/**
 * Describes the message flow.access.GetLatestBlockHeaderRequest.
 * Use `create(GetLatestBlockHeaderRequestSchema)` to create a new message.
 */
export const GetLatestBlockHeaderRequestSchema: GenMessage<GetLatestBlockHeaderRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 4)

/**
 * @generated from message flow.access.GetBlockHeaderByIDRequest
 */
export type GetBlockHeaderByIDRequest =
  Message<"flow.access.GetBlockHeaderByIDRequest"> & {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array
  }

/**
 * Describes the message flow.access.GetBlockHeaderByIDRequest.
 * Use `create(GetBlockHeaderByIDRequestSchema)` to create a new message.
 */
export const GetBlockHeaderByIDRequestSchema: GenMessage<GetBlockHeaderByIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 5)

/**
 * @generated from message flow.access.GetBlockHeaderByHeightRequest
 */
export type GetBlockHeaderByHeightRequest =
  Message<"flow.access.GetBlockHeaderByHeightRequest"> & {
    /**
     * @generated from field: uint64 height = 1;
     */
    height: bigint
  }

/**
 * Describes the message flow.access.GetBlockHeaderByHeightRequest.
 * Use `create(GetBlockHeaderByHeightRequestSchema)` to create a new message.
 */
export const GetBlockHeaderByHeightRequestSchema: GenMessage<GetBlockHeaderByHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 6)

/**
 * @generated from message flow.access.BlockHeaderResponse
 */
export type BlockHeaderResponse = Message<"flow.access.BlockHeaderResponse"> & {
  /**
   * @generated from field: flow.entities.BlockHeader block = 1;
   */
  block?: BlockHeader

  /**
   * @generated from field: flow.entities.BlockStatus block_status = 2;
   */
  blockStatus: BlockStatus

  /**
   * @generated from field: flow.entities.Metadata metadata = 3;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.BlockHeaderResponse.
 * Use `create(BlockHeaderResponseSchema)` to create a new message.
 */
export const BlockHeaderResponseSchema: GenMessage<BlockHeaderResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 7)

/**
 * @generated from message flow.access.GetLatestBlockRequest
 */
export type GetLatestBlockRequest =
  Message<"flow.access.GetLatestBlockRequest"> & {
    /**
     * @generated from field: bool is_sealed = 1;
     */
    isSealed: boolean

    /**
     * @generated from field: bool full_block_response = 2;
     */
    fullBlockResponse: boolean
  }

/**
 * Describes the message flow.access.GetLatestBlockRequest.
 * Use `create(GetLatestBlockRequestSchema)` to create a new message.
 */
export const GetLatestBlockRequestSchema: GenMessage<GetLatestBlockRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 8)

/**
 * @generated from message flow.access.GetBlockByIDRequest
 */
export type GetBlockByIDRequest = Message<"flow.access.GetBlockByIDRequest"> & {
  /**
   * @generated from field: bytes id = 1;
   */
  id: Uint8Array

  /**
   * @generated from field: bool full_block_response = 2;
   */
  fullBlockResponse: boolean
}

/**
 * Describes the message flow.access.GetBlockByIDRequest.
 * Use `create(GetBlockByIDRequestSchema)` to create a new message.
 */
export const GetBlockByIDRequestSchema: GenMessage<GetBlockByIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 9)

/**
 * @generated from message flow.access.GetBlockByHeightRequest
 */
export type GetBlockByHeightRequest =
  Message<"flow.access.GetBlockByHeightRequest"> & {
    /**
     * @generated from field: uint64 height = 1;
     */
    height: bigint

    /**
     * @generated from field: bool full_block_response = 2;
     */
    fullBlockResponse: boolean
  }

/**
 * Describes the message flow.access.GetBlockByHeightRequest.
 * Use `create(GetBlockByHeightRequestSchema)` to create a new message.
 */
export const GetBlockByHeightRequestSchema: GenMessage<GetBlockByHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 10)

/**
 * @generated from message flow.access.BlockResponse
 */
export type BlockResponse = Message<"flow.access.BlockResponse"> & {
  /**
   * @generated from field: flow.entities.Block block = 1;
   */
  block?: Block

  /**
   * @generated from field: flow.entities.BlockStatus block_status = 2;
   */
  blockStatus: BlockStatus

  /**
   * @generated from field: flow.entities.Metadata metadata = 3;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.BlockResponse.
 * Use `create(BlockResponseSchema)` to create a new message.
 */
export const BlockResponseSchema: GenMessage<BlockResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 11)

/**
 * @generated from message flow.access.GetCollectionByIDRequest
 */
export type GetCollectionByIDRequest =
  Message<"flow.access.GetCollectionByIDRequest"> & {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array
  }

/**
 * Describes the message flow.access.GetCollectionByIDRequest.
 * Use `create(GetCollectionByIDRequestSchema)` to create a new message.
 */
export const GetCollectionByIDRequestSchema: GenMessage<GetCollectionByIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 12)

/**
 * @generated from message flow.access.GetFullCollectionByIDRequest
 */
export type GetFullCollectionByIDRequest =
  Message<"flow.access.GetFullCollectionByIDRequest"> & {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array
  }

/**
 * Describes the message flow.access.GetFullCollectionByIDRequest.
 * Use `create(GetFullCollectionByIDRequestSchema)` to create a new message.
 */
export const GetFullCollectionByIDRequestSchema: GenMessage<GetFullCollectionByIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 13)

/**
 * @generated from message flow.access.CollectionResponse
 */
export type CollectionResponse = Message<"flow.access.CollectionResponse"> & {
  /**
   * @generated from field: flow.entities.Collection collection = 1;
   */
  collection?: Collection

  /**
   * @generated from field: flow.entities.Metadata metadata = 2;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.CollectionResponse.
 * Use `create(CollectionResponseSchema)` to create a new message.
 */
export const CollectionResponseSchema: GenMessage<CollectionResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 14)

/**
 * @generated from message flow.access.FullCollectionResponse
 */
export type FullCollectionResponse =
  Message<"flow.access.FullCollectionResponse"> & {
    /**
     * @generated from field: repeated flow.entities.Transaction transactions = 1;
     */
    transactions: Transaction[]

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata
  }

/**
 * Describes the message flow.access.FullCollectionResponse.
 * Use `create(FullCollectionResponseSchema)` to create a new message.
 */
export const FullCollectionResponseSchema: GenMessage<FullCollectionResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 15)

/**
 * @generated from message flow.access.SendTransactionRequest
 */
export type SendTransactionRequest =
  Message<"flow.access.SendTransactionRequest"> & {
    /**
     * @generated from field: flow.entities.Transaction transaction = 1;
     */
    transaction?: Transaction
  }

/**
 * Describes the message flow.access.SendTransactionRequest.
 * Use `create(SendTransactionRequestSchema)` to create a new message.
 */
export const SendTransactionRequestSchema: GenMessage<SendTransactionRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 16)

/**
 * @generated from message flow.access.SendTransactionResponse
 */
export type SendTransactionResponse =
  Message<"flow.access.SendTransactionResponse"> & {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata
  }

/**
 * Describes the message flow.access.SendTransactionResponse.
 * Use `create(SendTransactionResponseSchema)` to create a new message.
 */
export const SendTransactionResponseSchema: GenMessage<SendTransactionResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 17)

/**
 * @generated from message flow.access.GetTransactionRequest
 */
export type GetTransactionRequest =
  Message<"flow.access.GetTransactionRequest"> & {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array

    /**
     * @generated from field: bytes block_id = 2;
     */
    blockId: Uint8Array

    /**
     * @generated from field: bytes collection_id = 3;
     */
    collectionId: Uint8Array

    /**
     * @generated from field: flow.entities.EventEncodingVersion event_encoding_version = 4;
     */
    eventEncodingVersion: EventEncodingVersion
  }

/**
 * Describes the message flow.access.GetTransactionRequest.
 * Use `create(GetTransactionRequestSchema)` to create a new message.
 */
export const GetTransactionRequestSchema: GenMessage<GetTransactionRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 18)

/**
 * @generated from message flow.access.GetSystemTransactionRequest
 */
export type GetSystemTransactionRequest =
  Message<"flow.access.GetSystemTransactionRequest"> & {
    /**
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array
  }

/**
 * Describes the message flow.access.GetSystemTransactionRequest.
 * Use `create(GetSystemTransactionRequestSchema)` to create a new message.
 */
export const GetSystemTransactionRequestSchema: GenMessage<GetSystemTransactionRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 19)

/**
 * @generated from message flow.access.GetSystemTransactionResultRequest
 */
export type GetSystemTransactionResultRequest =
  Message<"flow.access.GetSystemTransactionResultRequest"> & {
    /**
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array

    /**
     * @generated from field: flow.entities.EventEncodingVersion event_encoding_version = 2;
     */
    eventEncodingVersion: EventEncodingVersion
  }

/**
 * Describes the message flow.access.GetSystemTransactionResultRequest.
 * Use `create(GetSystemTransactionResultRequestSchema)` to create a new message.
 */
export const GetSystemTransactionResultRequestSchema: GenMessage<GetSystemTransactionResultRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 20)

/**
 * @generated from message flow.access.GetTransactionByIndexRequest
 */
export type GetTransactionByIndexRequest =
  Message<"flow.access.GetTransactionByIndexRequest"> & {
    /**
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array

    /**
     * @generated from field: uint32 index = 2;
     */
    index: number

    /**
     * @generated from field: flow.entities.EventEncodingVersion event_encoding_version = 3;
     */
    eventEncodingVersion: EventEncodingVersion
  }

/**
 * Describes the message flow.access.GetTransactionByIndexRequest.
 * Use `create(GetTransactionByIndexRequestSchema)` to create a new message.
 */
export const GetTransactionByIndexRequestSchema: GenMessage<GetTransactionByIndexRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 21)

/**
 * @generated from message flow.access.GetTransactionsByBlockIDRequest
 */
export type GetTransactionsByBlockIDRequest =
  Message<"flow.access.GetTransactionsByBlockIDRequest"> & {
    /**
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array

    /**
     * @generated from field: flow.entities.EventEncodingVersion event_encoding_version = 2;
     */
    eventEncodingVersion: EventEncodingVersion
  }

/**
 * Describes the message flow.access.GetTransactionsByBlockIDRequest.
 * Use `create(GetTransactionsByBlockIDRequestSchema)` to create a new message.
 */
export const GetTransactionsByBlockIDRequestSchema: GenMessage<GetTransactionsByBlockIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 22)

/**
 * @generated from message flow.access.TransactionResultsResponse
 */
export type TransactionResultsResponse =
  Message<"flow.access.TransactionResultsResponse"> & {
    /**
     * @generated from field: repeated flow.access.TransactionResultResponse transaction_results = 1;
     */
    transactionResults: TransactionResultResponse[]

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata
  }

/**
 * Describes the message flow.access.TransactionResultsResponse.
 * Use `create(TransactionResultsResponseSchema)` to create a new message.
 */
export const TransactionResultsResponseSchema: GenMessage<TransactionResultsResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 23)

/**
 * @generated from message flow.access.TransactionsResponse
 */
export type TransactionsResponse =
  Message<"flow.access.TransactionsResponse"> & {
    /**
     * @generated from field: repeated flow.entities.Transaction transactions = 1;
     */
    transactions: Transaction[]

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata
  }

/**
 * Describes the message flow.access.TransactionsResponse.
 * Use `create(TransactionsResponseSchema)` to create a new message.
 */
export const TransactionsResponseSchema: GenMessage<TransactionsResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 24)

/**
 * @generated from message flow.access.TransactionResponse
 */
export type TransactionResponse = Message<"flow.access.TransactionResponse"> & {
  /**
   * @generated from field: flow.entities.Transaction transaction = 1;
   */
  transaction?: Transaction

  /**
   * @generated from field: flow.entities.Metadata metadata = 2;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.TransactionResponse.
 * Use `create(TransactionResponseSchema)` to create a new message.
 */
export const TransactionResponseSchema: GenMessage<TransactionResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 25)

/**
 * @generated from message flow.access.TransactionResultResponse
 */
export type TransactionResultResponse =
  Message<"flow.access.TransactionResultResponse"> & {
    /**
     * @generated from field: flow.entities.TransactionStatus status = 1;
     */
    status: TransactionStatus

    /**
     * @generated from field: uint32 status_code = 2;
     */
    statusCode: number

    /**
     * @generated from field: string error_message = 3;
     */
    errorMessage: string

    /**
     * @generated from field: repeated flow.entities.Event events = 4;
     */
    events: Event[]

    /**
     * @generated from field: bytes block_id = 5;
     */
    blockId: Uint8Array

    /**
     * @generated from field: bytes transaction_id = 6;
     */
    transactionId: Uint8Array

    /**
     * @generated from field: bytes collection_id = 7;
     */
    collectionId: Uint8Array

    /**
     * @generated from field: uint64 block_height = 8;
     */
    blockHeight: bigint

    /**
     * @generated from field: flow.entities.Metadata metadata = 9;
     */
    metadata?: Metadata

    /**
     * @generated from field: uint64 computation_usage = 10;
     */
    computationUsage: bigint
  }

/**
 * Describes the message flow.access.TransactionResultResponse.
 * Use `create(TransactionResultResponseSchema)` to create a new message.
 */
export const TransactionResultResponseSchema: GenMessage<TransactionResultResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 26)

/**
 * @generated from message flow.access.GetAccountRequest
 */
export type GetAccountRequest = Message<"flow.access.GetAccountRequest"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array
}

/**
 * Describes the message flow.access.GetAccountRequest.
 * Use `create(GetAccountRequestSchema)` to create a new message.
 */
export const GetAccountRequestSchema: GenMessage<GetAccountRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 27)

/**
 * @generated from message flow.access.GetAccountResponse
 */
export type GetAccountResponse = Message<"flow.access.GetAccountResponse"> & {
  /**
   * @generated from field: flow.entities.Account account = 1;
   */
  account?: Account

  /**
   * @generated from field: flow.entities.Metadata metadata = 2;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.GetAccountResponse.
 * Use `create(GetAccountResponseSchema)` to create a new message.
 */
export const GetAccountResponseSchema: GenMessage<GetAccountResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 28)

/**
 * @generated from message flow.access.GetAccountAtLatestBlockRequest
 */
export type GetAccountAtLatestBlockRequest =
  Message<"flow.access.GetAccountAtLatestBlockRequest"> & {
    /**
     * @generated from field: bytes address = 1;
     */
    address: Uint8Array
  }

/**
 * Describes the message flow.access.GetAccountAtLatestBlockRequest.
 * Use `create(GetAccountAtLatestBlockRequestSchema)` to create a new message.
 */
export const GetAccountAtLatestBlockRequestSchema: GenMessage<GetAccountAtLatestBlockRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 29)

/**
 * @generated from message flow.access.AccountResponse
 */
export type AccountResponse = Message<"flow.access.AccountResponse"> & {
  /**
   * @generated from field: flow.entities.Account account = 1;
   */
  account?: Account

  /**
   * @generated from field: flow.entities.Metadata metadata = 2;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.AccountResponse.
 * Use `create(AccountResponseSchema)` to create a new message.
 */
export const AccountResponseSchema: GenMessage<AccountResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 30)

/**
 * @generated from message flow.access.GetAccountAtBlockHeightRequest
 */
export type GetAccountAtBlockHeightRequest =
  Message<"flow.access.GetAccountAtBlockHeightRequest"> & {
    /**
     * @generated from field: bytes address = 1;
     */
    address: Uint8Array

    /**
     * @generated from field: uint64 block_height = 2;
     */
    blockHeight: bigint
  }

/**
 * Describes the message flow.access.GetAccountAtBlockHeightRequest.
 * Use `create(GetAccountAtBlockHeightRequestSchema)` to create a new message.
 */
export const GetAccountAtBlockHeightRequestSchema: GenMessage<GetAccountAtBlockHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 31)

/**
 * @generated from message flow.access.GetAccountBalanceAtLatestBlockRequest
 */
export type GetAccountBalanceAtLatestBlockRequest =
  Message<"flow.access.GetAccountBalanceAtLatestBlockRequest"> & {
    /**
     * @generated from field: bytes address = 1;
     */
    address: Uint8Array
  }

/**
 * Describes the message flow.access.GetAccountBalanceAtLatestBlockRequest.
 * Use `create(GetAccountBalanceAtLatestBlockRequestSchema)` to create a new message.
 */
export const GetAccountBalanceAtLatestBlockRequestSchema: GenMessage<GetAccountBalanceAtLatestBlockRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 32)

/**
 * @generated from message flow.access.GetAccountBalanceAtBlockHeightRequest
 */
export type GetAccountBalanceAtBlockHeightRequest =
  Message<"flow.access.GetAccountBalanceAtBlockHeightRequest"> & {
    /**
     * @generated from field: bytes address = 1;
     */
    address: Uint8Array

    /**
     * @generated from field: uint64 block_height = 2;
     */
    blockHeight: bigint
  }

/**
 * Describes the message flow.access.GetAccountBalanceAtBlockHeightRequest.
 * Use `create(GetAccountBalanceAtBlockHeightRequestSchema)` to create a new message.
 */
export const GetAccountBalanceAtBlockHeightRequestSchema: GenMessage<GetAccountBalanceAtBlockHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 33)

/**
 * @generated from message flow.access.AccountBalanceResponse
 */
export type AccountBalanceResponse =
  Message<"flow.access.AccountBalanceResponse"> & {
    /**
     * @generated from field: uint64 balance = 1;
     */
    balance: bigint

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata
  }

/**
 * Describes the message flow.access.AccountBalanceResponse.
 * Use `create(AccountBalanceResponseSchema)` to create a new message.
 */
export const AccountBalanceResponseSchema: GenMessage<AccountBalanceResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 34)

/**
 * @generated from message flow.access.GetAccountKeysAtLatestBlockRequest
 */
export type GetAccountKeysAtLatestBlockRequest =
  Message<"flow.access.GetAccountKeysAtLatestBlockRequest"> & {
    /**
     * address of account
     *
     * @generated from field: bytes address = 1;
     */
    address: Uint8Array
  }

/**
 * Describes the message flow.access.GetAccountKeysAtLatestBlockRequest.
 * Use `create(GetAccountKeysAtLatestBlockRequestSchema)` to create a new message.
 */
export const GetAccountKeysAtLatestBlockRequestSchema: GenMessage<GetAccountKeysAtLatestBlockRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 35)

/**
 * @generated from message flow.access.GetAccountKeyAtLatestBlockRequest
 */
export type GetAccountKeyAtLatestBlockRequest =
  Message<"flow.access.GetAccountKeyAtLatestBlockRequest"> & {
    /**
     * address of account
     *
     * @generated from field: bytes address = 1;
     */
    address: Uint8Array

    /**
     * index of key to return
     *
     * @generated from field: uint32 index = 2;
     */
    index: number
  }

/**
 * Describes the message flow.access.GetAccountKeyAtLatestBlockRequest.
 * Use `create(GetAccountKeyAtLatestBlockRequestSchema)` to create a new message.
 */
export const GetAccountKeyAtLatestBlockRequestSchema: GenMessage<GetAccountKeyAtLatestBlockRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 36)

/**
 * @generated from message flow.access.GetAccountKeysAtBlockHeightRequest
 */
export type GetAccountKeysAtBlockHeightRequest =
  Message<"flow.access.GetAccountKeysAtBlockHeightRequest"> & {
    /**
     * @generated from field: bytes address = 1;
     */
    address: Uint8Array

    /**
     * @generated from field: uint64 block_height = 2;
     */
    blockHeight: bigint
  }

/**
 * Describes the message flow.access.GetAccountKeysAtBlockHeightRequest.
 * Use `create(GetAccountKeysAtBlockHeightRequestSchema)` to create a new message.
 */
export const GetAccountKeysAtBlockHeightRequestSchema: GenMessage<GetAccountKeysAtBlockHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 37)

/**
 * @generated from message flow.access.GetAccountKeyAtBlockHeightRequest
 */
export type GetAccountKeyAtBlockHeightRequest =
  Message<"flow.access.GetAccountKeyAtBlockHeightRequest"> & {
    /**
     * @generated from field: bytes address = 1;
     */
    address: Uint8Array

    /**
     * @generated from field: uint64 block_height = 2;
     */
    blockHeight: bigint

    /**
     * index of key to return
     *
     * @generated from field: uint32 index = 3;
     */
    index: number
  }

/**
 * Describes the message flow.access.GetAccountKeyAtBlockHeightRequest.
 * Use `create(GetAccountKeyAtBlockHeightRequestSchema)` to create a new message.
 */
export const GetAccountKeyAtBlockHeightRequestSchema: GenMessage<GetAccountKeyAtBlockHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 38)

/**
 * @generated from message flow.access.AccountKeysResponse
 */
export type AccountKeysResponse = Message<"flow.access.AccountKeysResponse"> & {
  /**
   * @generated from field: repeated flow.entities.AccountKey account_keys = 1;
   */
  accountKeys: AccountKey[]

  /**
   * @generated from field: flow.entities.Metadata metadata = 2;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.AccountKeysResponse.
 * Use `create(AccountKeysResponseSchema)` to create a new message.
 */
export const AccountKeysResponseSchema: GenMessage<AccountKeysResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 39)

/**
 * @generated from message flow.access.AccountKeyResponse
 */
export type AccountKeyResponse = Message<"flow.access.AccountKeyResponse"> & {
  /**
   * @generated from field: flow.entities.AccountKey account_key = 1;
   */
  accountKey?: AccountKey

  /**
   * @generated from field: flow.entities.Metadata metadata = 2;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.AccountKeyResponse.
 * Use `create(AccountKeyResponseSchema)` to create a new message.
 */
export const AccountKeyResponseSchema: GenMessage<AccountKeyResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 40)

/**
 * @generated from message flow.access.ExecuteScriptAtLatestBlockRequest
 */
export type ExecuteScriptAtLatestBlockRequest =
  Message<"flow.access.ExecuteScriptAtLatestBlockRequest"> & {
    /**
     * @generated from field: bytes script = 1;
     */
    script: Uint8Array

    /**
     * @generated from field: repeated bytes arguments = 2;
     */
    arguments: Uint8Array[]
  }

/**
 * Describes the message flow.access.ExecuteScriptAtLatestBlockRequest.
 * Use `create(ExecuteScriptAtLatestBlockRequestSchema)` to create a new message.
 */
export const ExecuteScriptAtLatestBlockRequestSchema: GenMessage<ExecuteScriptAtLatestBlockRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 41)

/**
 * @generated from message flow.access.ExecuteScriptAtBlockIDRequest
 */
export type ExecuteScriptAtBlockIDRequest =
  Message<"flow.access.ExecuteScriptAtBlockIDRequest"> & {
    /**
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array

    /**
     * @generated from field: bytes script = 2;
     */
    script: Uint8Array

    /**
     * @generated from field: repeated bytes arguments = 3;
     */
    arguments: Uint8Array[]
  }

/**
 * Describes the message flow.access.ExecuteScriptAtBlockIDRequest.
 * Use `create(ExecuteScriptAtBlockIDRequestSchema)` to create a new message.
 */
export const ExecuteScriptAtBlockIDRequestSchema: GenMessage<ExecuteScriptAtBlockIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 42)

/**
 * @generated from message flow.access.ExecuteScriptAtBlockHeightRequest
 */
export type ExecuteScriptAtBlockHeightRequest =
  Message<"flow.access.ExecuteScriptAtBlockHeightRequest"> & {
    /**
     * @generated from field: uint64 block_height = 1;
     */
    blockHeight: bigint

    /**
     * @generated from field: bytes script = 2;
     */
    script: Uint8Array

    /**
     * @generated from field: repeated bytes arguments = 3;
     */
    arguments: Uint8Array[]
  }

/**
 * Describes the message flow.access.ExecuteScriptAtBlockHeightRequest.
 * Use `create(ExecuteScriptAtBlockHeightRequestSchema)` to create a new message.
 */
export const ExecuteScriptAtBlockHeightRequestSchema: GenMessage<ExecuteScriptAtBlockHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 43)

/**
 * @generated from message flow.access.ExecuteScriptResponse
 */
export type ExecuteScriptResponse =
  Message<"flow.access.ExecuteScriptResponse"> & {
    /**
     * @generated from field: bytes value = 1;
     */
    value: Uint8Array

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata

    /**
     * @generated from field: uint64 computation_usage = 3;
     */
    computationUsage: bigint
  }

/**
 * Describes the message flow.access.ExecuteScriptResponse.
 * Use `create(ExecuteScriptResponseSchema)` to create a new message.
 */
export const ExecuteScriptResponseSchema: GenMessage<ExecuteScriptResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 44)

/**
 * @generated from message flow.access.GetEventsForHeightRangeRequest
 */
export type GetEventsForHeightRangeRequest =
  Message<"flow.access.GetEventsForHeightRangeRequest"> & {
    /**
     * @generated from field: string type = 1;
     */
    type: string

    /**
     * @generated from field: uint64 start_height = 2;
     */
    startHeight: bigint

    /**
     * @generated from field: uint64 end_height = 3;
     */
    endHeight: bigint

    /**
     * @generated from field: flow.entities.EventEncodingVersion event_encoding_version = 4;
     */
    eventEncodingVersion: EventEncodingVersion
  }

/**
 * Describes the message flow.access.GetEventsForHeightRangeRequest.
 * Use `create(GetEventsForHeightRangeRequestSchema)` to create a new message.
 */
export const GetEventsForHeightRangeRequestSchema: GenMessage<GetEventsForHeightRangeRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 45)

/**
 * @generated from message flow.access.GetEventsForBlockIDsRequest
 */
export type GetEventsForBlockIDsRequest =
  Message<"flow.access.GetEventsForBlockIDsRequest"> & {
    /**
     * @generated from field: string type = 1;
     */
    type: string

    /**
     * @generated from field: repeated bytes block_ids = 2;
     */
    blockIds: Uint8Array[]

    /**
     * @generated from field: flow.entities.EventEncodingVersion event_encoding_version = 3;
     */
    eventEncodingVersion: EventEncodingVersion
  }

/**
 * Describes the message flow.access.GetEventsForBlockIDsRequest.
 * Use `create(GetEventsForBlockIDsRequestSchema)` to create a new message.
 */
export const GetEventsForBlockIDsRequestSchema: GenMessage<GetEventsForBlockIDsRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 46)

/**
 * @generated from message flow.access.EventsResponse
 */
export type EventsResponse = Message<"flow.access.EventsResponse"> & {
  /**
   * @generated from field: repeated flow.access.EventsResponse.Result results = 1;
   */
  results: EventsResponse_Result[]

  /**
   * @generated from field: flow.entities.Metadata metadata = 2;
   */
  metadata?: Metadata
}

/**
 * Describes the message flow.access.EventsResponse.
 * Use `create(EventsResponseSchema)` to create a new message.
 */
export const EventsResponseSchema: GenMessage<EventsResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 47)

/**
 * @generated from message flow.access.EventsResponse.Result
 */
export type EventsResponse_Result =
  Message<"flow.access.EventsResponse.Result"> & {
    /**
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array

    /**
     * @generated from field: uint64 block_height = 2;
     */
    blockHeight: bigint

    /**
     * @generated from field: repeated flow.entities.Event events = 3;
     */
    events: Event[]

    /**
     * @generated from field: google.protobuf.Timestamp block_timestamp = 4;
     */
    blockTimestamp?: Timestamp
  }

/**
 * Describes the message flow.access.EventsResponse.Result.
 * Use `create(EventsResponse_ResultSchema)` to create a new message.
 */
export const EventsResponse_ResultSchema: GenMessage<EventsResponse_Result> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 47, 0)

/**
 * @generated from message flow.access.GetNetworkParametersRequest
 */
export type GetNetworkParametersRequest =
  Message<"flow.access.GetNetworkParametersRequest"> & {}

/**
 * Describes the message flow.access.GetNetworkParametersRequest.
 * Use `create(GetNetworkParametersRequestSchema)` to create a new message.
 */
export const GetNetworkParametersRequestSchema: GenMessage<GetNetworkParametersRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 48)

/**
 * @generated from message flow.access.GetNetworkParametersResponse
 */
export type GetNetworkParametersResponse =
  Message<"flow.access.GetNetworkParametersResponse"> & {
    /**
     * @generated from field: string chain_id = 1;
     */
    chainId: string
  }

/**
 * Describes the message flow.access.GetNetworkParametersResponse.
 * Use `create(GetNetworkParametersResponseSchema)` to create a new message.
 */
export const GetNetworkParametersResponseSchema: GenMessage<GetNetworkParametersResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 49)

/**
 * @generated from message flow.access.GetLatestProtocolStateSnapshotRequest
 */
export type GetLatestProtocolStateSnapshotRequest =
  Message<"flow.access.GetLatestProtocolStateSnapshotRequest"> & {}

/**
 * Describes the message flow.access.GetLatestProtocolStateSnapshotRequest.
 * Use `create(GetLatestProtocolStateSnapshotRequestSchema)` to create a new message.
 */
export const GetLatestProtocolStateSnapshotRequestSchema: GenMessage<GetLatestProtocolStateSnapshotRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 50)

/**
 * @generated from message flow.access.GetProtocolStateSnapshotByBlockIDRequest
 */
export type GetProtocolStateSnapshotByBlockIDRequest =
  Message<"flow.access.GetProtocolStateSnapshotByBlockIDRequest"> & {
    /**
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array
  }

/**
 * Describes the message flow.access.GetProtocolStateSnapshotByBlockIDRequest.
 * Use `create(GetProtocolStateSnapshotByBlockIDRequestSchema)` to create a new message.
 */
export const GetProtocolStateSnapshotByBlockIDRequestSchema: GenMessage<GetProtocolStateSnapshotByBlockIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 51)

/**
 * @generated from message flow.access.GetProtocolStateSnapshotByHeightRequest
 */
export type GetProtocolStateSnapshotByHeightRequest =
  Message<"flow.access.GetProtocolStateSnapshotByHeightRequest"> & {
    /**
     * @generated from field: uint64 block_height = 1;
     */
    blockHeight: bigint
  }

/**
 * Describes the message flow.access.GetProtocolStateSnapshotByHeightRequest.
 * Use `create(GetProtocolStateSnapshotByHeightRequestSchema)` to create a new message.
 */
export const GetProtocolStateSnapshotByHeightRequestSchema: GenMessage<GetProtocolStateSnapshotByHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 52)

/**
 * @generated from message flow.access.ProtocolStateSnapshotResponse
 */
export type ProtocolStateSnapshotResponse =
  Message<"flow.access.ProtocolStateSnapshotResponse"> & {
    /**
     * @generated from field: bytes serializedSnapshot = 1;
     */
    serializedSnapshot: Uint8Array

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata
  }

/**
 * Describes the message flow.access.ProtocolStateSnapshotResponse.
 * Use `create(ProtocolStateSnapshotResponseSchema)` to create a new message.
 */
export const ProtocolStateSnapshotResponseSchema: GenMessage<ProtocolStateSnapshotResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 53)

/**
 * @generated from message flow.access.GetExecutionResultForBlockIDRequest
 */
export type GetExecutionResultForBlockIDRequest =
  Message<"flow.access.GetExecutionResultForBlockIDRequest"> & {
    /**
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array
  }

/**
 * Describes the message flow.access.GetExecutionResultForBlockIDRequest.
 * Use `create(GetExecutionResultForBlockIDRequestSchema)` to create a new message.
 */
export const GetExecutionResultForBlockIDRequestSchema: GenMessage<GetExecutionResultForBlockIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 54)

/**
 * @generated from message flow.access.ExecutionResultForBlockIDResponse
 */
export type ExecutionResultForBlockIDResponse =
  Message<"flow.access.ExecutionResultForBlockIDResponse"> & {
    /**
     * @generated from field: flow.entities.ExecutionResult execution_result = 1;
     */
    executionResult?: ExecutionResult

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata
  }

/**
 * Describes the message flow.access.ExecutionResultForBlockIDResponse.
 * Use `create(ExecutionResultForBlockIDResponseSchema)` to create a new message.
 */
export const ExecutionResultForBlockIDResponseSchema: GenMessage<ExecutionResultForBlockIDResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 55)

/**
 * @generated from message flow.access.GetExecutionResultByIDRequest
 */
export type GetExecutionResultByIDRequest =
  Message<"flow.access.GetExecutionResultByIDRequest"> & {
    /**
     * @generated from field: bytes id = 1;
     */
    id: Uint8Array
  }

/**
 * Describes the message flow.access.GetExecutionResultByIDRequest.
 * Use `create(GetExecutionResultByIDRequestSchema)` to create a new message.
 */
export const GetExecutionResultByIDRequestSchema: GenMessage<GetExecutionResultByIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 56)

/**
 * @generated from message flow.access.ExecutionResultByIDResponse
 */
export type ExecutionResultByIDResponse =
  Message<"flow.access.ExecutionResultByIDResponse"> & {
    /**
     * @generated from field: flow.entities.ExecutionResult execution_result = 1;
     */
    executionResult?: ExecutionResult

    /**
     * @generated from field: flow.entities.Metadata metadata = 2;
     */
    metadata?: Metadata
  }

/**
 * Describes the message flow.access.ExecutionResultByIDResponse.
 * Use `create(ExecutionResultByIDResponseSchema)` to create a new message.
 */
export const ExecutionResultByIDResponseSchema: GenMessage<ExecutionResultByIDResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 57)

/**
 * The request for SubscribeBlocksFromStartBlockID
 *
 * @generated from message flow.access.SubscribeBlocksFromStartBlockIDRequest
 */
export type SubscribeBlocksFromStartBlockIDRequest =
  Message<"flow.access.SubscribeBlocksFromStartBlockIDRequest"> & {
    /**
     * Block ID of the first block to subscribe.
     *
     * @generated from field: bytes start_block_id = 1;
     */
    startBlockId: Uint8Array

    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 2;
     */
    blockStatus: BlockStatus

    /**
     * Boolean value determining the response: 'full' if `true`, 'light' otherwise.
     *
     * @generated from field: bool full_block_response = 3;
     */
    fullBlockResponse: boolean
  }

/**
 * Describes the message flow.access.SubscribeBlocksFromStartBlockIDRequest.
 * Use `create(SubscribeBlocksFromStartBlockIDRequestSchema)` to create a new message.
 */
export const SubscribeBlocksFromStartBlockIDRequestSchema: GenMessage<SubscribeBlocksFromStartBlockIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 58)

/**
 * The request for SubscribeBlocksFromStartHeight
 *
 * @generated from message flow.access.SubscribeBlocksFromStartHeightRequest
 */
export type SubscribeBlocksFromStartHeightRequest =
  Message<"flow.access.SubscribeBlocksFromStartHeightRequest"> & {
    /**
     * Block height of the first block to subscribe.
     *
     * @generated from field: uint64 start_block_height = 1;
     */
    startBlockHeight: bigint

    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 2;
     */
    blockStatus: BlockStatus

    /**
     * Boolean value determining the response: 'full' if `true`, 'light' otherwise.
     *
     * @generated from field: bool full_block_response = 3;
     */
    fullBlockResponse: boolean
  }

/**
 * Describes the message flow.access.SubscribeBlocksFromStartHeightRequest.
 * Use `create(SubscribeBlocksFromStartHeightRequestSchema)` to create a new message.
 */
export const SubscribeBlocksFromStartHeightRequestSchema: GenMessage<SubscribeBlocksFromStartHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 59)

/**
 * The request for SubscribeBlocksFromLatest
 *
 * @generated from message flow.access.SubscribeBlocksFromLatestRequest
 */
export type SubscribeBlocksFromLatestRequest =
  Message<"flow.access.SubscribeBlocksFromLatestRequest"> & {
    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 1;
     */
    blockStatus: BlockStatus

    /**
     * Boolean value determining the response: 'full' if `true`, 'light' otherwise.
     *
     * @generated from field: bool full_block_response = 2;
     */
    fullBlockResponse: boolean
  }

/**
 * Describes the message flow.access.SubscribeBlocksFromLatestRequest.
 * Use `create(SubscribeBlocksFromLatestRequestSchema)` to create a new message.
 */
export const SubscribeBlocksFromLatestRequestSchema: GenMessage<SubscribeBlocksFromLatestRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 60)

/**
 * The response for SubscribeBlocksFromStartBlockID, SubscribeBlocksFromStartHeight, SubscribeBlocksFromLatest
 *
 * @generated from message flow.access.SubscribeBlocksResponse
 */
export type SubscribeBlocksResponse =
  Message<"flow.access.SubscribeBlocksResponse"> & {
    /**
     * The sealed or finalized blocks according to the block status
     * in the request.
     *
     * @generated from field: flow.entities.Block block = 1;
     */
    block?: Block
  }

/**
 * Describes the message flow.access.SubscribeBlocksResponse.
 * Use `create(SubscribeBlocksResponseSchema)` to create a new message.
 */
export const SubscribeBlocksResponseSchema: GenMessage<SubscribeBlocksResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 61)

/**
 * The request for SubscribeBlockHeadersFromStartBlockID
 *
 * @generated from message flow.access.SubscribeBlockHeadersFromStartBlockIDRequest
 */
export type SubscribeBlockHeadersFromStartBlockIDRequest =
  Message<"flow.access.SubscribeBlockHeadersFromStartBlockIDRequest"> & {
    /**
     * Block ID of the first block header to subscribe.
     *
     * @generated from field: bytes start_block_id = 1;
     */
    startBlockId: Uint8Array

    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 2;
     */
    blockStatus: BlockStatus
  }

/**
 * Describes the message flow.access.SubscribeBlockHeadersFromStartBlockIDRequest.
 * Use `create(SubscribeBlockHeadersFromStartBlockIDRequestSchema)` to create a new message.
 */
export const SubscribeBlockHeadersFromStartBlockIDRequestSchema: GenMessage<SubscribeBlockHeadersFromStartBlockIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 62)

/**
 * The request for SubscribeBlockHeadersFromStartHeight
 *
 * @generated from message flow.access.SubscribeBlockHeadersFromStartHeightRequest
 */
export type SubscribeBlockHeadersFromStartHeightRequest =
  Message<"flow.access.SubscribeBlockHeadersFromStartHeightRequest"> & {
    /**
     * Block height of the first block header to subscribe.
     *
     * @generated from field: uint64 start_block_height = 1;
     */
    startBlockHeight: bigint

    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 2;
     */
    blockStatus: BlockStatus
  }

/**
 * Describes the message flow.access.SubscribeBlockHeadersFromStartHeightRequest.
 * Use `create(SubscribeBlockHeadersFromStartHeightRequestSchema)` to create a new message.
 */
export const SubscribeBlockHeadersFromStartHeightRequestSchema: GenMessage<SubscribeBlockHeadersFromStartHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 63)

/**
 * The request for SubscribeBlockHeadersFromLatest
 *
 * @generated from message flow.access.SubscribeBlockHeadersFromLatestRequest
 */
export type SubscribeBlockHeadersFromLatestRequest =
  Message<"flow.access.SubscribeBlockHeadersFromLatestRequest"> & {
    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 1;
     */
    blockStatus: BlockStatus
  }

/**
 * Describes the message flow.access.SubscribeBlockHeadersFromLatestRequest.
 * Use `create(SubscribeBlockHeadersFromLatestRequestSchema)` to create a new message.
 */
export const SubscribeBlockHeadersFromLatestRequestSchema: GenMessage<SubscribeBlockHeadersFromLatestRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 64)

/**
 * The response for SubscribeBlockHeadersFromStartBlockID, SubscribeBlockHeadersFromStartHeight, SubscribeBlockHeadersFromLatest
 *
 * @generated from message flow.access.SubscribeBlockHeadersResponse
 */
export type SubscribeBlockHeadersResponse =
  Message<"flow.access.SubscribeBlockHeadersResponse"> & {
    /**
     * The sealed or finalized block headers according to the block status
     * in the request.
     *
     * @generated from field: flow.entities.BlockHeader header = 1;
     */
    header?: BlockHeader
  }

/**
 * Describes the message flow.access.SubscribeBlockHeadersResponse.
 * Use `create(SubscribeBlockHeadersResponseSchema)` to create a new message.
 */
export const SubscribeBlockHeadersResponseSchema: GenMessage<SubscribeBlockHeadersResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 65)

/**
 * The request for SubscribeBlockDigestsFromStartBlockID
 *
 * @generated from message flow.access.SubscribeBlockDigestsFromStartBlockIDRequest
 */
export type SubscribeBlockDigestsFromStartBlockIDRequest =
  Message<"flow.access.SubscribeBlockDigestsFromStartBlockIDRequest"> & {
    /**
     * Block ID of the first block to subscribe.
     *
     * @generated from field: bytes start_block_id = 1;
     */
    startBlockId: Uint8Array

    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 2;
     */
    blockStatus: BlockStatus
  }

/**
 * Describes the message flow.access.SubscribeBlockDigestsFromStartBlockIDRequest.
 * Use `create(SubscribeBlockDigestsFromStartBlockIDRequestSchema)` to create a new message.
 */
export const SubscribeBlockDigestsFromStartBlockIDRequestSchema: GenMessage<SubscribeBlockDigestsFromStartBlockIDRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 66)

/**
 * The request for SubscribeBlockDigestsFromStartHeight
 *
 * @generated from message flow.access.SubscribeBlockDigestsFromStartHeightRequest
 */
export type SubscribeBlockDigestsFromStartHeightRequest =
  Message<"flow.access.SubscribeBlockDigestsFromStartHeightRequest"> & {
    /**
     * Block height of the first block to subscribe.
     *
     * @generated from field: uint64 start_block_height = 1;
     */
    startBlockHeight: bigint

    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 2;
     */
    blockStatus: BlockStatus
  }

/**
 * Describes the message flow.access.SubscribeBlockDigestsFromStartHeightRequest.
 * Use `create(SubscribeBlockDigestsFromStartHeightRequestSchema)` to create a new message.
 */
export const SubscribeBlockDigestsFromStartHeightRequestSchema: GenMessage<SubscribeBlockDigestsFromStartHeightRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 67)

/**
 * The request for SubscribeBlockDigestsFromLatest
 *
 * @generated from message flow.access.SubscribeBlockDigestsFromLatestRequest
 */
export type SubscribeBlockDigestsFromLatestRequest =
  Message<"flow.access.SubscribeBlockDigestsFromLatestRequest"> & {
    /**
     * Required block status of the block payload.
     * Possible variants:
     * 1. BLOCK_FINALIZED
     * 2. BLOCK_SEALED
     *
     * @generated from field: flow.entities.BlockStatus block_status = 1;
     */
    blockStatus: BlockStatus
  }

/**
 * Describes the message flow.access.SubscribeBlockDigestsFromLatestRequest.
 * Use `create(SubscribeBlockDigestsFromLatestRequestSchema)` to create a new message.
 */
export const SubscribeBlockDigestsFromLatestRequestSchema: GenMessage<SubscribeBlockDigestsFromLatestRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 68)

/**
 * The response for SubscribeBlockDigestsFromStartBlockID, SubscribeBlockDigestsFromStartHeight, SubscribeBlockDigestsFromLatest
 *
 * @generated from message flow.access.SubscribeBlockDigestsResponse
 */
export type SubscribeBlockDigestsResponse =
  Message<"flow.access.SubscribeBlockDigestsResponse"> & {
    /**
     * The block ID of the new sealed or finalized block according to the block status
     * in the request.
     *
     * @generated from field: bytes block_id = 1;
     */
    blockId: Uint8Array

    /**
     * The block height of the new sealed or finalized block according to the block status
     * in the request.
     *
     * @generated from field: uint64 block_height = 2;
     */
    blockHeight: bigint

    /**
     * The timestamp of the new sealed or finalized block according to the block status
     * in the request.
     *
     * @generated from field: google.protobuf.Timestamp block_timestamp = 3;
     */
    blockTimestamp?: Timestamp
  }

/**
 * Describes the message flow.access.SubscribeBlockDigestsResponse.
 * Use `create(SubscribeBlockDigestsResponseSchema)` to create a new message.
 */
export const SubscribeBlockDigestsResponseSchema: GenMessage<SubscribeBlockDigestsResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 69)

/**
 * Request message for sending a transaction and subscribing to its status changes.
 *
 * @generated from message flow.access.SendAndSubscribeTransactionStatusesRequest
 */
export type SendAndSubscribeTransactionStatusesRequest =
  Message<"flow.access.SendAndSubscribeTransactionStatusesRequest"> & {
    /**
     * The transaction to be sent and tracked for status changes.
     *
     * @generated from field: flow.entities.Transaction transaction = 1;
     */
    transaction?: Transaction

    /**
     * The encoding for events in transaction result
     *
     * @generated from field: flow.entities.EventEncodingVersion event_encoding_version = 2;
     */
    eventEncodingVersion: EventEncodingVersion
  }

/**
 * Describes the message flow.access.SendAndSubscribeTransactionStatusesRequest.
 * Use `create(SendAndSubscribeTransactionStatusesRequestSchema)` to create a new message.
 */
export const SendAndSubscribeTransactionStatusesRequestSchema: GenMessage<SendAndSubscribeTransactionStatusesRequest> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 70)

/**
 * Response message for transaction status changes.
 *
 * @generated from message flow.access.SendAndSubscribeTransactionStatusesResponse
 */
export type SendAndSubscribeTransactionStatusesResponse =
  Message<"flow.access.SendAndSubscribeTransactionStatusesResponse"> & {
    /**
     * Transaction result of the tracked transaction
     *
     * @generated from field: flow.access.TransactionResultResponse transaction_results = 1;
     */
    transactionResults?: TransactionResultResponse

    /**
     * The message index of the response message. Used by the client to ensure they received all messages. Starts from "0".
     *
     * @generated from field: uint64 message_index = 2;
     */
    messageIndex: bigint
  }

/**
 * Describes the message flow.access.SendAndSubscribeTransactionStatusesResponse.
 * Use `create(SendAndSubscribeTransactionStatusesResponseSchema)` to create a new message.
 */
export const SendAndSubscribeTransactionStatusesResponseSchema: GenMessage<SendAndSubscribeTransactionStatusesResponse> =
  /*@__PURE__*/
  messageDesc(file_flow_access_access, 71)

/**
 * AccessAPI is the public-facing API provided by access nodes.
 *
 * @generated from service flow.access.AccessAPI
 */
export const AccessAPI: GenService<{
  /**
   * Ping is used to check if the access node is alive and healthy.
   *
   * @generated from rpc flow.access.AccessAPI.Ping
   */
  ping: {
    methodKind: "unary"
    input: typeof PingRequestSchema
    output: typeof PingResponseSchema
  }
  /**
   * GetNodeVersionInfo return node version information, such as semver,
   * commit, sporkID and protocol version.
   *
   * @generated from rpc flow.access.AccessAPI.GetNodeVersionInfo
   */
  getNodeVersionInfo: {
    methodKind: "unary"
    input: typeof GetNodeVersionInfoRequestSchema
    output: typeof GetNodeVersionInfoResponseSchema
  }
  /**
   * GetLatestBlockHeader gets the latest sealed or unsealed block header.
   *
   * @generated from rpc flow.access.AccessAPI.GetLatestBlockHeader
   */
  getLatestBlockHeader: {
    methodKind: "unary"
    input: typeof GetLatestBlockHeaderRequestSchema
    output: typeof BlockHeaderResponseSchema
  }
  /**
   * GetBlockHeaderByID gets a block header by ID.
   *
   * @generated from rpc flow.access.AccessAPI.GetBlockHeaderByID
   */
  getBlockHeaderByID: {
    methodKind: "unary"
    input: typeof GetBlockHeaderByIDRequestSchema
    output: typeof BlockHeaderResponseSchema
  }
  /**
   * GetBlockHeaderByHeight gets a block header by height.
   *
   * @generated from rpc flow.access.AccessAPI.GetBlockHeaderByHeight
   */
  getBlockHeaderByHeight: {
    methodKind: "unary"
    input: typeof GetBlockHeaderByHeightRequestSchema
    output: typeof BlockHeaderResponseSchema
  }
  /**
   * GetLatestBlock gets the full payload of the latest sealed or unsealed
   * block.
   *
   * @generated from rpc flow.access.AccessAPI.GetLatestBlock
   */
  getLatestBlock: {
    methodKind: "unary"
    input: typeof GetLatestBlockRequestSchema
    output: typeof BlockResponseSchema
  }
  /**
   * GetBlockByID gets a full block by ID.
   *
   * @generated from rpc flow.access.AccessAPI.GetBlockByID
   */
  getBlockByID: {
    methodKind: "unary"
    input: typeof GetBlockByIDRequestSchema
    output: typeof BlockResponseSchema
  }
  /**
   * GetBlockByHeight gets a full block by height.
   *
   * @generated from rpc flow.access.AccessAPI.GetBlockByHeight
   */
  getBlockByHeight: {
    methodKind: "unary"
    input: typeof GetBlockByHeightRequestSchema
    output: typeof BlockResponseSchema
  }
  /**
   * GetCollectionByID gets a collection by ID.
   *
   * @generated from rpc flow.access.AccessAPI.GetCollectionByID
   */
  getCollectionByID: {
    methodKind: "unary"
    input: typeof GetCollectionByIDRequestSchema
    output: typeof CollectionResponseSchema
  }
  /**
   * GetFullCollectionByID gets a collection by ID.
   *
   * @generated from rpc flow.access.AccessAPI.GetFullCollectionByID
   */
  getFullCollectionByID: {
    methodKind: "unary"
    input: typeof GetFullCollectionByIDRequestSchema
    output: typeof FullCollectionResponseSchema
  }
  /**
   * SendTransaction submits a transaction to the network.
   *
   * @generated from rpc flow.access.AccessAPI.SendTransaction
   */
  sendTransaction: {
    methodKind: "unary"
    input: typeof SendTransactionRequestSchema
    output: typeof SendTransactionResponseSchema
  }
  /**
   * GetTransaction gets a transaction by ID.
   *
   * @generated from rpc flow.access.AccessAPI.GetTransaction
   */
  getTransaction: {
    methodKind: "unary"
    input: typeof GetTransactionRequestSchema
    output: typeof TransactionResponseSchema
  }
  /**
   * GetTransactionResult gets the result of a transaction.
   *
   * @generated from rpc flow.access.AccessAPI.GetTransactionResult
   */
  getTransactionResult: {
    methodKind: "unary"
    input: typeof GetTransactionRequestSchema
    output: typeof TransactionResultResponseSchema
  }
  /**
   * GetTransactionResultByIndex gets the result of a transaction at a specified
   * block and index
   *
   * @generated from rpc flow.access.AccessAPI.GetTransactionResultByIndex
   */
  getTransactionResultByIndex: {
    methodKind: "unary"
    input: typeof GetTransactionByIndexRequestSchema
    output: typeof TransactionResultResponseSchema
  }
  /**
   * GetTransactionResultsByBlockID gets all the transaction results for a
   * specified block
   *
   * @generated from rpc flow.access.AccessAPI.GetTransactionResultsByBlockID
   */
  getTransactionResultsByBlockID: {
    methodKind: "unary"
    input: typeof GetTransactionsByBlockIDRequestSchema
    output: typeof TransactionResultsResponseSchema
  }
  /**
   * GetTransactionsByBlockID gets all the transactions for a specified block
   *
   * @generated from rpc flow.access.AccessAPI.GetTransactionsByBlockID
   */
  getTransactionsByBlockID: {
    methodKind: "unary"
    input: typeof GetTransactionsByBlockIDRequestSchema
    output: typeof TransactionsResponseSchema
  }
  /**
   * GetSystemTransaction gets a system transaction
   *
   * @generated from rpc flow.access.AccessAPI.GetSystemTransaction
   */
  getSystemTransaction: {
    methodKind: "unary"
    input: typeof GetSystemTransactionRequestSchema
    output: typeof TransactionResponseSchema
  }
  /**
   * GetSystemTransactionResult gets a system transaction result for a
   * specified block
   *
   * @generated from rpc flow.access.AccessAPI.GetSystemTransactionResult
   */
  getSystemTransactionResult: {
    methodKind: "unary"
    input: typeof GetSystemTransactionResultRequestSchema
    output: typeof TransactionResultResponseSchema
  }
  /**
   * GetAccount is an alias for GetAccountAtLatestBlock.
   *
   * Warning: this function is deprecated. It behaves identically to
   * GetAccountAtLatestBlock and will be removed in a future version.
   *
   * @generated from rpc flow.access.AccessAPI.GetAccount
   */
  getAccount: {
    methodKind: "unary"
    input: typeof GetAccountRequestSchema
    output: typeof GetAccountResponseSchema
  }
  /**
   * GetAccountAtLatestBlock gets an account by address from the latest sealed
   * execution state.
   *
   * @generated from rpc flow.access.AccessAPI.GetAccountAtLatestBlock
   */
  getAccountAtLatestBlock: {
    methodKind: "unary"
    input: typeof GetAccountAtLatestBlockRequestSchema
    output: typeof AccountResponseSchema
  }
  /**
   * GetAccountAtBlockHeight gets an account by address at the given block
   * height
   *
   * @generated from rpc flow.access.AccessAPI.GetAccountAtBlockHeight
   */
  getAccountAtBlockHeight: {
    methodKind: "unary"
    input: typeof GetAccountAtBlockHeightRequestSchema
    output: typeof AccountResponseSchema
  }
  /**
   * GetAccountBalanceAtLatestBlock gets an account balance by address from the latest sealed
   * execution state.
   *
   * @generated from rpc flow.access.AccessAPI.GetAccountBalanceAtLatestBlock
   */
  getAccountBalanceAtLatestBlock: {
    methodKind: "unary"
    input: typeof GetAccountBalanceAtLatestBlockRequestSchema
    output: typeof AccountBalanceResponseSchema
  }
  /**
   * GetAccountBalanceAtBlockHeight gets an account balance by address at the given block
   * height
   *
   * @generated from rpc flow.access.AccessAPI.GetAccountBalanceAtBlockHeight
   */
  getAccountBalanceAtBlockHeight: {
    methodKind: "unary"
    input: typeof GetAccountBalanceAtBlockHeightRequestSchema
    output: typeof AccountBalanceResponseSchema
  }
  /**
   * GetAccountKeysAtLatestBlock gets an account public keys by address from the latest sealed
   * execution state.
   *
   * @generated from rpc flow.access.AccessAPI.GetAccountKeysAtLatestBlock
   */
  getAccountKeysAtLatestBlock: {
    methodKind: "unary"
    input: typeof GetAccountKeysAtLatestBlockRequestSchema
    output: typeof AccountKeysResponseSchema
  }
  /**
   * GetAccountKeysAtBlockHeight gets an account public keys by address at the given block
   * height
   *
   * @generated from rpc flow.access.AccessAPI.GetAccountKeysAtBlockHeight
   */
  getAccountKeysAtBlockHeight: {
    methodKind: "unary"
    input: typeof GetAccountKeysAtBlockHeightRequestSchema
    output: typeof AccountKeysResponseSchema
  }
  /**
   * GetAccountKeysAtLatestBlock gets an account public key by address and key index from the latest sealed
   * execution state.
   *
   * @generated from rpc flow.access.AccessAPI.GetAccountKeyAtLatestBlock
   */
  getAccountKeyAtLatestBlock: {
    methodKind: "unary"
    input: typeof GetAccountKeyAtLatestBlockRequestSchema
    output: typeof AccountKeyResponseSchema
  }
  /**
   * GetAccountKeysAtBlockHeight gets an account public key by address and key index at the given block
   * height
   *
   * @generated from rpc flow.access.AccessAPI.GetAccountKeyAtBlockHeight
   */
  getAccountKeyAtBlockHeight: {
    methodKind: "unary"
    input: typeof GetAccountKeyAtBlockHeightRequestSchema
    output: typeof AccountKeyResponseSchema
  }
  /**
   * ExecuteScriptAtLatestBlock executes a read-only Cadence script against the
   * latest sealed execution state.
   *
   * @generated from rpc flow.access.AccessAPI.ExecuteScriptAtLatestBlock
   */
  executeScriptAtLatestBlock: {
    methodKind: "unary"
    input: typeof ExecuteScriptAtLatestBlockRequestSchema
    output: typeof ExecuteScriptResponseSchema
  }
  /**
   * ExecuteScriptAtBlockID executes a ready-only Cadence script against the
   * execution state at the block with the given ID.
   *
   * @generated from rpc flow.access.AccessAPI.ExecuteScriptAtBlockID
   */
  executeScriptAtBlockID: {
    methodKind: "unary"
    input: typeof ExecuteScriptAtBlockIDRequestSchema
    output: typeof ExecuteScriptResponseSchema
  }
  /**
   * ExecuteScriptAtBlockHeight executes a ready-only Cadence script against the
   * execution state at the given block height.
   *
   * @generated from rpc flow.access.AccessAPI.ExecuteScriptAtBlockHeight
   */
  executeScriptAtBlockHeight: {
    methodKind: "unary"
    input: typeof ExecuteScriptAtBlockHeightRequestSchema
    output: typeof ExecuteScriptResponseSchema
  }
  /**
   * GetEventsForHeightRange retrieves events emitted within the specified block
   * range.
   *
   * @generated from rpc flow.access.AccessAPI.GetEventsForHeightRange
   */
  getEventsForHeightRange: {
    methodKind: "unary"
    input: typeof GetEventsForHeightRangeRequestSchema
    output: typeof EventsResponseSchema
  }
  /**
   * GetEventsForBlockIDs retrieves events for the specified block IDs and event
   * type.
   *
   * @generated from rpc flow.access.AccessAPI.GetEventsForBlockIDs
   */
  getEventsForBlockIDs: {
    methodKind: "unary"
    input: typeof GetEventsForBlockIDsRequestSchema
    output: typeof EventsResponseSchema
  }
  /**
   * GetNetworkParameters retrieves the Flow network details
   *
   * @generated from rpc flow.access.AccessAPI.GetNetworkParameters
   */
  getNetworkParameters: {
    methodKind: "unary"
    input: typeof GetNetworkParametersRequestSchema
    output: typeof GetNetworkParametersResponseSchema
  }
  /**
   * GetLatestProtocolStateSnapshot retrieves the latest sealed protocol state
   * snapshot. Used by Flow nodes joining the network to bootstrap a
   * space-efficient local state.
   *
   * @generated from rpc flow.access.AccessAPI.GetLatestProtocolStateSnapshot
   */
  getLatestProtocolStateSnapshot: {
    methodKind: "unary"
    input: typeof GetLatestProtocolStateSnapshotRequestSchema
    output: typeof ProtocolStateSnapshotResponseSchema
  }
  /**
   * GetProtocolStateSnapshotByBlockID retrieves the latest sealed protocol state
   * snapshot by block ID. Used by Flow nodes joining the network to bootstrap a
   * space-efficient local state.
   *
   * @generated from rpc flow.access.AccessAPI.GetProtocolStateSnapshotByBlockID
   */
  getProtocolStateSnapshotByBlockID: {
    methodKind: "unary"
    input: typeof GetProtocolStateSnapshotByBlockIDRequestSchema
    output: typeof ProtocolStateSnapshotResponseSchema
  }
  /**
   * GetProtocolStateSnapshotByHeight retrieves the latest sealed protocol state
   * snapshot by block height. Used by Flow nodes joining the network to bootstrap a
   * space-efficient local state.
   *
   * @generated from rpc flow.access.AccessAPI.GetProtocolStateSnapshotByHeight
   */
  getProtocolStateSnapshotByHeight: {
    methodKind: "unary"
    input: typeof GetProtocolStateSnapshotByHeightRequestSchema
    output: typeof ProtocolStateSnapshotResponseSchema
  }
  /**
   * GetExecutionResultForBlockID returns Execution Result for a given block.
   * At present, Access Node might not have execution results for every block
   * and as usual, until sealed, this data can change
   *
   * @generated from rpc flow.access.AccessAPI.GetExecutionResultForBlockID
   */
  getExecutionResultForBlockID: {
    methodKind: "unary"
    input: typeof GetExecutionResultForBlockIDRequestSchema
    output: typeof ExecutionResultForBlockIDResponseSchema
  }
  /**
   * GetExecutionResultByID returns Execution Result by its ID.
   *
   * @generated from rpc flow.access.AccessAPI.GetExecutionResultByID
   */
  getExecutionResultByID: {
    methodKind: "unary"
    input: typeof GetExecutionResultByIDRequestSchema
    output: typeof ExecutionResultByIDResponseSchema
  }
  /**
   * SubscribeBlocksFromStartBlockID streams finalized or sealed blocks starting at the requested
   * start block id, up until the latest available block. Once the latest is
   * reached, the stream will remain open and responses are sent for each new
   * block as it becomes available.
   *
   * Blocks are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed blocks will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlocksFromStartBlockID
   */
  subscribeBlocksFromStartBlockID: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlocksFromStartBlockIDRequestSchema
    output: typeof SubscribeBlocksResponseSchema
  }
  /**
   * SubscribeBlocksFromStartHeight streams finalized or sealed blocks starting at the requested
   * start block height, up until the latest available block. Once the latest is
   * reached, the stream will remain open and responses are sent for each new
   * block as it becomes available.
   *
   * Blocks are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed blocks will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlocksFromStartHeight
   */
  subscribeBlocksFromStartHeight: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlocksFromStartHeightRequestSchema
    output: typeof SubscribeBlocksResponseSchema
  }
  /**
   * SubscribeBlocksFromLatest streams finalized or sealed blocks starting from the latest finalized or sealed
   * block. The stream will remain open and responses are sent for each new block as it becomes available.
   *
   * Blocks are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed blocks will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlocksFromLatest
   */
  subscribeBlocksFromLatest: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlocksFromLatestRequestSchema
    output: typeof SubscribeBlocksResponseSchema
  }
  /**
   * SubscribeBlockHeadersFromStartBlockID streams finalized or sealed block headers starting at the requested
   * start block id, up until the latest available block. Once the latest is
   * reached, the stream will remain open and responses are sent for each new
   * block header as it becomes available.
   *
   * Block headers are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed block headers will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlockHeadersFromStartBlockID
   */
  subscribeBlockHeadersFromStartBlockID: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlockHeadersFromStartBlockIDRequestSchema
    output: typeof SubscribeBlockHeadersResponseSchema
  }
  /**
   * SubscribeBlockHeadersFromStartHeight streams finalized or sealed block headers starting at the requested
   * start block height, up until the latest available block. Once the latest is
   * reached, the stream will remain open and responses are sent for each new
   * block header as it becomes available.
   *
   * Block headers are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed block headers will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlockHeadersFromStartHeight
   */
  subscribeBlockHeadersFromStartHeight: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlockHeadersFromStartHeightRequestSchema
    output: typeof SubscribeBlockHeadersResponseSchema
  }
  /**
   * SubscribeBlockHeadersFromLatest streams finalized or sealed block headers starting from the latest finalized or sealed
   * block. The stream will remain open and responses are sent for each new block header as it becomes available.
   *
   * Block headers are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed block headers will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlockHeadersFromLatest
   */
  subscribeBlockHeadersFromLatest: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlockHeadersFromLatestRequestSchema
    output: typeof SubscribeBlockHeadersResponseSchema
  }
  /**
   * SubscribeBlockDigestsFromStartBlockID streams finalized or sealed lightweight block starting at the requested
   * start block id, up until the latest available block. Once the latest is
   * reached, the stream will remain open and responses are sent for each new
   * lightweight block as it becomes available.
   *
   * Lightweight blocks are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed lightweight blocks will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlockDigestsFromStartBlockID
   */
  subscribeBlockDigestsFromStartBlockID: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlockDigestsFromStartBlockIDRequestSchema
    output: typeof SubscribeBlockDigestsResponseSchema
  }
  /**
   * SubscribeBlockDigestsFromStartHeight streams finalized or sealed lightweight block starting at the requested
   * start block height, up until the latest available block. Once the latest is
   * reached, the stream will remain open and responses are sent for each new
   * lightweight block as it becomes available.
   *
   * Lightweight blocks are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed lightweight blocks will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlockDigestsFromStartHeight
   */
  subscribeBlockDigestsFromStartHeight: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlockDigestsFromStartHeightRequestSchema
    output: typeof SubscribeBlockDigestsResponseSchema
  }
  /**
   * SubscribeBlockDigestsFromLatest streams finalized or sealed lightweight block headers starting of the latest finalized or sealed
   * block. The stream will remain open and responses are sent for each new lightweight block as it becomes available.
   *
   * Lightweight blocks are only returned when they have reached the provided block status. For example,
   * if the status is "sealed", only sealed lightweight blocks will be returned.
   *
   * @generated from rpc flow.access.AccessAPI.SubscribeBlockDigestsFromLatest
   */
  subscribeBlockDigestsFromLatest: {
    methodKind: "server_streaming"
    input: typeof SubscribeBlockDigestsFromLatestRequestSchema
    output: typeof SubscribeBlockDigestsResponseSchema
  }
  /**
   * SendAndSubscribeTransactionStatuses send a transaction and immediately subscribe to its status changes. The status
   * is streamed back until the block containing the transaction becomes sealed.
   *
   * @generated from rpc flow.access.AccessAPI.SendAndSubscribeTransactionStatuses
   */
  sendAndSubscribeTransactionStatuses: {
    methodKind: "server_streaming"
    input: typeof SendAndSubscribeTransactionStatusesRequestSchema
    output: typeof SendAndSubscribeTransactionStatusesResponseSchema
  }
}> = /*@__PURE__*/ serviceDesc(file_flow_access_access, 0)
